@use "sass:math";

@import "base/mixins";

@import "fonts/fonts";

@import "fonts/icons";

// Font
$fontFamily: "Satoshi";
$fontSize: toRem(13);

// CSS Color Variables
@import "base/colors-palette";

// SASS Variables
$mainColor: oklch(var(--text-primary));
$mainBackground: oklch(var(--bg-secondary));

@import "base/transitions";

// Site min width
$minWidth: 320;
// Template width
$maxWidth: 1920;
// Container max width
$maxWidthContainer: 1400;
$maxWidthContainerSecondary: 1200;

// padding-inline = value / 2
$containerPadding: 30;

// Breakpoints
$containerWidth: $maxWidthContainer + $containerPadding;
$containerWidthSecondary: $maxWidthContainerSecondary + $containerPadding;
$pc: toEm($containerWidth);
$tablet: toEm(991.98); // Tablets, horizontal mobiles
$mobile: toEm(767.98); // L mobiles
$mobileSmall: toEm(479.98); // S mobiles

// Adaptive type:
// 1 = responsive
// 2 = breakpoints
$responsiveType: 1;

// Reset css
@import "base/null";

// @import "libs/tailwind";

body {
	// scrollbar-gutter: stable;
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}
	.loaded & {
		opacity: 1;
	}
}

.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	@supports (overflow: clip) {
		overflow: clip;
	}
	> main {
		flex: 1 1 auto;
	}
	// Sliders fix
	> * {
		min-width: 0;
	}
}
@if ($responsiveType==1) {
	// Responsive
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			} @else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
	[class*="__container--secondary"] {
		@if ($maxWidthContainerSecondary>0) {
			max-width: toRem($containerWidthSecondary);
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			@if ($maxWidthContainerSecondary>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			} @else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
} @else {
	// Breakpoints
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
		} @else {
			@if ($containerPadding>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: toRem(970);
		}
		@media (max-width: $tablet) {
			max-width: toRem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
	}
}

// (i) Експерементальний функціонал
// Заміна обмежуючому контейнеру
// [class*="--gc"] {
// 	@include gridContainer();
// }

// Підключення базових стилів, шаблонів (заготівель) та допоміжних класів
// Для підключення/вимкнення конкретних стилів дивись base.scss
@import "base";

// Підключення стилів загальних елементів проекту
@import "common";

// Підключення стилів окремих блоків
@import "header";
@import "footer";

// Підключення стилів окремих сторінок
@import "home";

.visibility-hidden {
	border: 0;
	clip: rect(0 0 0 0);
	height: auto;
	margin: 0;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
	white-space: nowrap;
}

.page {
	&__hero {
		@include adaptiveValue("padding-block-start", 224, 160);
	}

	&__logos {
		max-width: toRem(1200);
		margin-inline: auto;
	}

	&__services {
	}

	&__selected-work {
	}
}

.page {
	&__hero {
		@include adaptiveValue("padding-block-start", 224, 160);
		&.selected-work {
			@include adaptiveValue("padding-block-end", 160, 80);
		}
		&.contact {
			@include adaptiveValue("padding-block-end", 160, 80);
		}
		&.blog {
			@include adaptiveValue("padding-block-end", 160, 80);
		}
		&.about {
			@include adaptiveValue("padding-block-end", 160, 80);
		}
		&.work-single {
			@include adaptiveValue("padding-block-end", 128, 24);
		}
	}

	&__logos {
		max-width: toRem(1200);
		margin-inline: auto;
	}

	&__services {
	}

	&__selected-work {
	}
}
