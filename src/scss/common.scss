.transition-colors {
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
	transition-timing-function: var(--default-transition-timing-function);
	transition-duration: 150ms;
}

.button {
	display: inline-flex;
	align-items: center;
	column-gap: toRem(8);
	letter-spacing: toRem(2);
	outline: toRem(1) solid oklch(var(--border-default));
	padding-block: toRem(10);
	padding-inline: toRem(16);
	background: oklch(var(--bg-muted-primary-alpha));
	border-radius: toRem(2);
	@extend .transition-colors;

	&:hover {
		background: oklch(var(--bg-muted-primary) / 10%);
	}

	&--secondary {
		outline: none;
		background-color: oklch(var(--bg-primary));
		color: oklch(var(--text-secondary));

		&:hover {
			background-color: oklch(var(--bg-primary) / 90%);
		}
	}

	&--tertiary {
		outline: none;
		background-color: oklch(var(--bg-tertiary));
		color: oklch(var(--text-primary));

		&:hover {
			background-color: oklch(var(--bg-tertiary) / 90%);
		}
	}

	&--l {
		padding-block: toRem(16);
		padding-inline: toRem(20);
	}

	&--arrow {
		i {
			&::before {
				transform: rotate(-45deg) translate(toRem(1), toRem(-0.5));
			}
			font-size: toRem(18);
		}
	}

	&:focus-visible {
		outline: toRem(2) solid oklch(var(--border-primary));
		outline-offset: toRem(2);
	}
}

.button-text {
	display: inline-flex;
	align-items: center;
	column-gap: toRem(12);
	letter-spacing: toRem(1.5);

	&:hover {
		i {
			background: oklch(var(--bg-muted-primary) / 10%);
		}
	}

	i {
		padding: toRem(8);
		font-size: toRem(18);
	}

	&:not(&--secondary, &--tertiary) {
		i {
			outline: toRem(1) solid oklch(var(--border-default));
		}
	}

	&--arrow {
		i {
			&::before {
				transform: rotate(-45deg) translate(toRem(1), toRem(-0.5));
			}
		}
	}

	&--secondary {
		&:hover {
			i {
				background-color: oklch(var(--bg-primary) / 95%);
			}
		}
		i {
			background-color: oklch(var(--bg-primary));
			color: oklch(var(--text-secondary));
		}
	}

	&--tertiary {
		&:hover {
			i {
				background-color: oklch(var(--bg-tertiary) / 90%);
			}
		}
		i {
			background-color: oklch(var(--bg-tertiary));
			color: oklch(var(--text-primary));
		}
	}

	&:focus-visible {
		outline: toRem(2) solid oklch(var(--border-primary));
		outline-offset: toRem(2);
	}
}

a.badge,
button.badge {
	&:hover {
		background: oklch(var(--bg-muted-primary) / 10%);
	}
}

.badge {
	display: inline-flex;
	align-items: center;
	justify-content: center;
	border-radius: 50%;
	padding: toRem(8.5);
	background-color: oklch(var(--primary) / 5%);
	backdrop-filter: blur(toRem(15));
	outline: toRem(1) solid oklch(var(--border-default));
	font-size: toRem(14);
	aspect-ratio: 1;
	@extend .transition-colors;

	&.badge--m {
		padding: toRem(12.5);
		font-size: toRem(16);
	}

	&.badge--l {
		padding: toRem(13);
		font-size: toRem(20);
	}

	&.badge--secondary {
		background-color: oklch(var(--bg-primary));
		color: oklch(var(--text-secondary));
		outline: none;

		&:hover {
			background-color: oklch(var(--bg-primary) / 90%);
		}
	}

	&.badge--tertiary {
		background-color: oklch(var(--bg-tertiary));
		color: oklch(var(--text-primary));
		outline: none;

		&:hover {
			background-color: oklch(var(--bg-tertiary) / 90%);
		}
	}

	&:focus-visible {
		outline: toRem(2) solid oklch(var(--border-primary));
		outline-offset: toRem(2);
	}
}

.label {
	display: inline-flex;
	font-family: "Chillax";
	font-size: toRem(12);
	line-height: 120%;
	padding: toRem(8);
	outline: toRem(1) solid oklch(var(--border-default));
	background: oklch(var(--bg-muted-primary-alpha));
	backdrop-filter: blur(toRem(15));
	border-radius: toRem(2);

	&--secondary {
		outline: none;
		background-color: oklch(var(--bg-primary));
		color: oklch(var(--text-secondary));
	}

	&--tertiary {
		outline: none;
		background-color: oklch(var(--bg-tertiary));
		color: oklch(var(--text-primary));
	}
}

.input {
	font-size: toRem(13);
	line-height: 160%;
	outline: toRem(1) solid oklch(var(--border-default));
	background: oklch(var(--bg-muted-primary-alpha));
	border-radius: toRem(2);
	padding-block: toRem(16);
	padding-inline: toRem(24);
	letter-spacing: toRem(1.5);

	&::placeholder {
		color: oklch(var(--text-primary));
		letter-spacing: toRem(1.5);
		text-transform: uppercase;
	}
}

.block-hero {
	&--center {
		text-align: center;
	}

	&__super-title {
		&:not(:last-child) {
			margin-block-end: toRem(16);
		}
	}

	&__list {
		margin-inline: auto;
		&:not(:last-child) {
			@include adaptiveValue("margin-block-end", 48, 20);
		}
	}

	&__title {
		@include adaptiveValue("font-size", 160, 48);
		font-weight: 300;

		&--xs {
			@include adaptiveValue("font-size", 80, 48);
		}

		&--s {
			@include adaptiveValue("font-size", 96, 48);
			max-width: toRem(400);
		}

		&--m {
			@include adaptiveValue("font-size", 128, 48);
			max-width: toRem(710);
		}

		span {
			font-family: "Gambetta";
			font-style: italic;
		}

		&:not(:last-child) {
			margin-block-end: toRem(16);
		}
	}

	&__text {
		font-family: "Chillax";
		@include adaptiveValue("font-size", 24, 16);
		font-weight: 300;
		color: oklch(var(--text-muted));
		line-height: 150%;
		max-width: toRem(600);

		&--m {
			@include adaptiveValue("font-size", 20, 16);
		}

		&--s {
			@include adaptiveValue("font-size", 18, 16);
			line-height: 160%;
		}

		&:not(:last-child) {
			@include adaptiveValue("margin-block-end", 48, 20);
		}
	}

	&.block-hero--center {
		.block-hero__title,
		.block-hero__text {
			margin-inline: auto;
		}
	}

	&__goto {
		i {
			&::before {
				transform: translateX(toRem(1)) rotate(90deg);
				animation: spring 1s ease-in 0s infinite alternate;
			}
		}

		@keyframes spring {
			0% {
				transform: translateX(toRem(1)) translateY(toRem(0)) rotate(90deg);
			}

			100% {
				transform: translateX(toRem(1)) translateY(toRem(5)) rotate(90deg);
			}
		}
	}

	&__button {
	}
}

.list-hero {
	display: flex;
	justify-content: space-between;
	flex-wrap: wrap;
	max-width: toRem(1000);
	@include adaptiveValue("gap", 32, 16);

	&__item {
		padding: toRem(16);
		flex: 1 1 toRem(226);
		border-radius: toRem(2);
		border: toRem(1) solid oklch(var(--border-default));
		background-color: oklch(var(--bg-muted-primary-alpha));

		div {
			&:first-child {
				margin-block-end: toRem(4);
			}
		}
	}
}

.block-card {
	@include adaptiveValue("padding", 48, 18);
	position: relative;
	background-color: oklch(var(--bg-muted-primary-alpha));
	border: toRem(1) solid oklch(var(--border-default));
	border-radius: toRem(2);
	display: flex;
	flex-direction: column;

	&--text-grow {
		.block-card__text {
			flex: 1;
		}
	}

	&__super-title {
		max-width: 88.84%;
		&:not(:last-child) {
			margin-block-end: toRem(4);
		}
	}

	&__image {
		height: toRem(30);
		object-position: left center;
		object-fit: contain;
		&:not(:last-child) {
			@include adaptiveValue("margin-block-end", 32, 20);
		}
	}

	&__title {
		@include adaptiveValue("font-size", 24, 18);
		line-height: 130%;
		letter-spacing: toRem(1);
		font-weight: 300;

		&:not(:last-child) {
			margin-block-end: toRem(8);
		}
	}
	&__text {
		max-width: toRem(800);
		&:not(:last-child) {
			@include adaptiveValue("margin-block-end", 32, 18);
		}
	}
	&__link {
		align-self: flex-start;
		&::before {
			transform: rotate(-45deg);
		}
	}
	&__list {
		display: flex;
		flex-direction: column;
		row-gap: toRem(16);
	}
	&__item {
		font-family: "Chillax";
		font-size: toRem(16);
		line-height: 180%;
		position: relative;
		padding-inline-start: toRem(20);

		&::before {
			content: "";
			position: absolute;
			top: toRem(12);
			left: 0;
			width: toRem(4);
			height: toRem(4);
			background-color: oklch(var(--bg-primary));
			border-radius: 50%;
		}
	}
	&__badge {
		@include adaptiveValue("top", 20, 5);
		@include adaptiveValue("right", 20, 5);
		position: absolute;
	}

	&__avatar {
		display: flex;
		align-items: center;
		column-gap: toRem(16);

		img {
			max-width: toRem(60);
		}
	}

	&__figcaption {
		display: flex;
		flex-direction: column;

		span {
			line-height: 160%;
			&:first-child {
				letter-spacing: toRem(1.5);
			}
			&:last-child {
				font-family: "Chillax";
				font-size: toRem(14);
				font-weight: 300;
				color: oklch(var(--text-muted));
			}
		}
	}
}

.super-title {
	text-transform: uppercase;
	line-height: 160%;
	letter-spacing: toRem(1.5);

	&--muted {
		color: oklch(var(--text-muted));
	}

	&--center {
		text-align: center;
	}
}

.item-work-selected {
	position: relative;
	border-radius: toRem(2);
	border: toRem(1) solid oklch(var(--border-default));

	&__image {
		position: absolute;
		top: 0;
		left: 0;
	}
	&__bar {
		position: absolute;
		padding-block: toRem(12);
		padding-inline: toRem(16);
		display: flex;
		justify-content: space-between;
		align-items: center;
		column-gap: toRem(24);
		border-radius: toRem(2);
		border: toRem(1) solid oklch(100% 0 0 / 15%);
		background-color: oklch(100% 0 0 / 5%);
		backdrop-filter: blur(toRem(15));
		bottom: toRem(32);
		max-width: 90.64%;
		width: 100%;
		left: 50%;
		transform: translateX(-50%);

		container-type: inline-size;
		container-name: selected-item-bar;
	}
	&__title {
		@include adaptiveValue("font-size", 24, 18);
		line-height: 130%;
		font-weight: 300;
		letter-spacing: toRem(1);
	}
	&__category {
		letter-spacing: toRem(1.5);
		line-height: 160%;
		text-transform: uppercase;
	}
}

.item-work-selected {
	position: relative;
	border-radius: toRem(2);
	border: toRem(1) solid oklch(var(--border-default));

	> a {
		width: 100%;
		height: 100%;
		&:focus-visible {
			outline: toRem(2) solid oklch(var(--border-primary));
			outline-offset: toRem(2);
		}
	}

	&:has(> a:hover)::before {
		opacity: 0;
	}

	&__image {
		position: absolute;
		top: 0;
		left: 0;
	}
	&__bar {
		position: absolute;
		@include adaptiveValue("padding-block", 12, 8);
		@include adaptiveValue("padding-inline", 16, 12);
		@include adaptiveValue("bottom", 32, 12);
		display: flex;
		justify-content: space-between;
		align-items: center;
		column-gap: toRem(24);
		border-radius: toRem(2);
		border: toRem(1) solid oklch(100% 0 0 / 15%);
		background-color: oklch(100% 0 0 / 5%);
		backdrop-filter: blur(toRem(15));
		max-width: 90.64%;
		width: 100%;
		left: 50%;
		transform: translateX(-50%);
		z-index: 1;
	}

	&__title {
		@include adaptiveValue("font-size", 24, 18);
		line-height: 130%;
		font-weight: 300;
		letter-spacing: toRem(1);
	}
	&__category {
		letter-spacing: toRem(1.5);
		line-height: 160%;
		text-transform: uppercase;
	}
}

.marquee {
	background: rgba(218, 197, 167, 0.1);
	padding-block: toRem(16);
	text-transform: uppercase;
	line-height: 160%;
	letter-spacing: toRem(1.5);
	white-space: nowrap;
	border-radius: toRem(2);
	border: toRem(1) solid oklch(var(--border-default));

	&__body {
		animation: marquee 30s linear infinite;
		display: flex;
		column-gap: toRem(32);
	}

	&__item {
	}

	&__separator {
	}
}

@keyframes marquee {
	0% {
		transform: translateX(0%);
	}
	100% {
		transform: translateX(-100%);
	}
}

.noise {
	position: relative;

	&::before {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: url("@img/noise.png") 0 0 / toRem(168) repeat;
		z-index: 1;
		pointer-events: none;
		transition: all 150ms;
	}
}

.paragraph {
	font-family: "Chillax";
	font-size: toRem(16);
	line-height: 180%;
	color: oklch(var(--text-muted));

	&--m {
		font-size: toRem(18);
		line-height: 160%;
	}
}

.title {
	@include adaptiveValue("font-size", 48, 24);
	font-weight: 300;
	line-height: 110%;

	&--m {
		@include adaptiveValue("font-size", 32, 20);
		line-height: 120%;
		letter-spacing: toRem(1);
	}

	&--s {
		@include adaptiveValue("font-size", 24, 18);
		line-height: 130%;
		letter-spacing: toRem(1);
	}
}

.socials-contact {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(toRem(290), 1fr));
	@include adaptiveValue("gap", 16, 10);

	&--columns-3 {
		grid-template-columns: repeat(auto-fit, minmax(toRem(250), 1fr));
	}

	&__social {
	}
	&__link {
		display: flex;
		align-items: center;
		justify-content: space-between;
		column-gap: toRem(8);
		padding: toRem(16);
		border-radius: toRem(1);
		border: toRem(1) solid oklch(var(--border-default));
		background-color: oklch(var(--bg-muted-primary-alpha));
		transition:
			background 0.3s ease,
			border-color 0.3s ease;

		div {
			display: flex;
			align-items: center;
			column-gap: toRem(16);
			transition: transform 0.3s ease;

			span:first-child {
				font-size: toRem(24);
				transition: transform 0.3s ease;
			}

			span:last-child {
				line-height: 160%;
				letter-spacing: toRem(1.5);
				text-transform: uppercase;
				transition: color 0.3s ease;
			}
		}

		> span {
			&::before {
				font-size: toRem(16);
				transform: rotate(-45deg);
				transition: transform 0.3s ease;
			}
		}

		&:hover {
			background: oklch(var(--bg-muted-primary-hover));
			border-color: oklch(var(--border-primary));

			div {
				transform: translateX(toRem(4));
			}

			span:last-child {
				color: oklch(var(--text-hover));
			}
		}
	}
}

.block {
	$containerWidthNew: 1600;

	border-radius: toRem(2);
	@include adaptiveValue("padding", 48, 12, 0, $containerWidthNew, 767.98);
	border: toRem(1) solid oklch(var(--border-default));
	background-color: oklch(var(--bg-muted-primary-alpha));

	.block--m {
		@include adaptiveValue("padding", 64, 20, 0, $containerWidthNew, 767.98);
	}
}

.header-section {
	@include adaptiveValue("padding-inline", 32, 20, 2, $containerWidth, 489.98);
	display: flex;
	justify-content: space-between;
	align-items: center;
	column-gap: toRem(24);
	row-gap: toRem(10);
	flex-wrap: wrap;

	&:not(:last-child) {
		margin-block-end: toRem(32);
	}

	&__title {
		@include adaptiveValue("font-size", 64, 32);
		line-height: 110%;
		font-weight: 300;

		span {
			font-family: "Gambetta";
		}
	}

	a {
		i {
			&::before {
				transform: rotate(-45deg) translate(1px, -1px);
			}
		}
	}
}
